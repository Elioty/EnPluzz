# EnPluzz
# Copyright (C) 2025  Elioty <roadkiller.cl@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Generated by Django 5.1.4 on 2025-03-23 16:27

import django.db.models.deletion
import enpluzz_core.modelHelper
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('enpluzz_core', '0001_initial'),
        ('enpluzz_heroes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enp_id', enpluzz_core.modelHelper.CharFieldFromJson(max_length=255, unique=True)),
                ('gem_value', enpluzz_core.modelHelper.IntegerFieldFromJson(null=True)),
                ('order', models.IntegerField(default=None, null=True)),
                ('not_allowed_as_loot', enpluzz_core.modelHelper.BooleanFieldFromJson(default=False)),
                ('can_be_received_date', enpluzz_core.modelHelper.DateTimeFieldFromJson(null=True)),
                ('refill_amount', enpluzz_core.modelHelper.IntegerFieldFromJson(null=True)),
                ('given_item_amount', enpluzz_core.modelHelper.IntegerFieldFromJson(null=True)),
                ('effect_amount', enpluzz_core.modelHelper.IntegerFieldFromJson(null=True)),
                ('increase_special_level', enpluzz_core.modelHelper.BooleanFieldFromJson(default=False)),
                ('limit_break_effect_amount', enpluzz_core.modelHelper.IntegerFieldFromJson(null=True)),
                ('rewards_per_element', enpluzz_core.modelHelper.JSONFieldFromJson(null=True)),
                ('rewards_only_for_limit_broken_characters', enpluzz_core.modelHelper.BooleanFieldFromJson(default=False)),
                ('targeted_limit_break_level', enpluzz_core.modelHelper.IntegerFieldFromJson(null=True)),
                ('amount_for_summon', enpluzz_core.modelHelper.IntegerFieldFromJson(null=True)),
                ('amount_for_10_summon', enpluzz_core.modelHelper.IntegerFieldFromJson(null=True)),
                ('first_province', enpluzz_core.modelHelper.IntegerFieldFromJson(null=True)),
                ('province_reward_weight', enpluzz_core.modelHelper.IntegerFieldFromJson(null=True)),
                ('amount_in_seconds', enpluzz_core.modelHelper.IntegerFieldFromJson(null=True)),
                ('costume', enpluzz_core.modelHelper.ForeignKeyFromJson(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='enpluzz_heroes.hero', to_field='enp_id')),
                ('guaranteed_rarity', enpluzz_core.modelHelper.ForeignKeyFromJson(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='enpluzz_core.rarity', to_field='enp_id')),
                ('hero_class', enpluzz_core.modelHelper.ForeignKeyFromJson(null=True, on_delete=django.db.models.deletion.PROTECT, to='enpluzz_heroes.classtype', to_field='enp_id')),
                ('parent_hero', enpluzz_core.modelHelper.ForeignKeyFromJson(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='enpluzz_heroes.hero', to_field='enp_id')),
                ('rarity', enpluzz_core.modelHelper.ForeignKeyFromJson(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='enpluzz_core.rarity', to_field='enp_id')),
            ],
        ),
        migrations.CreateModel(
            name='ItemToGameMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_mode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='enpluzz_core.gamemode', to_field='enp_id')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='enpluzz_items.item', to_field='enp_id')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='game_modes',
            field=enpluzz_core.modelHelper.ManyToManyFieldFromJson(through='enpluzz_items.ItemToGameMode', to='enpluzz_core.gamemode'),
        ),
        migrations.CreateModel(
            name='ItemType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enp_id', models.CharField(max_length=255, unique=True)),
                ('order', models.IntegerField(default=None, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['enp_id'], name='enpluzz_ite_enp_id_58daca_idx')],
            },
        ),
        migrations.AddField(
            model_name='item',
            name='item_type',
            field=enpluzz_core.modelHelper.ForeignKeyFromJson(null=True, on_delete=django.db.models.deletion.PROTECT, to='enpluzz_items.itemtype', to_field='enp_id'),
        ),
        migrations.CreateModel(
            name='RefillType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enp_id', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'indexes': [models.Index(fields=['enp_id'], name='enpluzz_ite_enp_id_9f9de7_idx')],
            },
        ),
        migrations.AddField(
            model_name='item',
            name='refill_type',
            field=enpluzz_core.modelHelper.ForeignKeyFromJson(null=True, on_delete=django.db.models.deletion.PROTECT, to='enpluzz_items.refilltype', to_field='enp_id'),
        ),
        migrations.CreateModel(
            name='TomeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enp_id', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'indexes': [models.Index(fields=['enp_id'], name='enpluzz_ite_enp_id_7c7fa2_idx')],
            },
        ),
        migrations.AddField(
            model_name='item',
            name='tome_type',
            field=enpluzz_core.modelHelper.ForeignKeyFromJson(null=True, on_delete=django.db.models.deletion.PROTECT, to='enpluzz_items.tometype', to_field='enp_id'),
        ),
        migrations.AddIndex(
            model_name='itemtogamemode',
            index=models.Index(fields=['item'], name='enpluzz_ite_item_id_03e3cf_idx'),
        ),
        migrations.AddIndex(
            model_name='itemtogamemode',
            index=models.Index(fields=['game_mode'], name='enpluzz_ite_game_mo_fc5bc9_idx'),
        ),
        migrations.AddConstraint(
            model_name='itemtogamemode',
            constraint=models.UniqueConstraint(fields=('item', 'game_mode'), name='unique_item_to_game_mode'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['enp_id'], name='enpluzz_ite_enp_id_aee398_idx'),
        ),
    ]
